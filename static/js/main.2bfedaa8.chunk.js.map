{"version":3,"sources":["FileUpload/FileUpload.js","FileItem/FileItem.js","FileList/FileList.js","TextResponse/TextResponse.js","App.js","reportWebVitals.js","index.js"],"names":["openAI_API","content","task","a","fetch","method","headers","body","JSON","stringify","prompt","response","ok","json","data","parsedData","bot","console","log","readFile","file","setSummary","reader","FileReader","onload","result","readAsText","FileUpload","files","setFiles","removeFile","doesExist","summary","setNewText","uploadHandler","event","target","name","isUploading","formData","FormData","append","axios","post","then","res","catch","err","error","className","type","onChange","FileItem","deleteFile","icon","faFilePdf","length","substring","faSpinner","faTrash","onClick","FileList","deleteFileHandler","_name","delete","map","f","TextResponse","newText","useState","text","setText","split","str","Card","Body","App","filename","filter","i","alert","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2bfedaa8.chunk.js","sourcesContent":["import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faPlusCircle, faPlusSquare } from '@fortawesome/free-solid-svg-icons'\r\nimport './FileUpload.scss'\r\nimport axios from 'axios'\r\n\r\nasync function openAI_API(content,task)\r\n{\r\n    content+=task\r\n    // TODO: Import baseURL of API from config file.\r\n    const response = await fetch('http://localhost:8080/', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            prompt: content\r\n        })\r\n    })\r\n    if(response.ok){\r\n    const data = await response.json();\r\n    const parsedData = data.bot\r\n    console.log(parsedData)\r\n    return parsedData;\r\n    }\r\n    return \"Error: API call failed. Try again..\"\r\n\r\n}\r\n\r\nasync function readFile(file,setSummary)\r\n{\r\n    let summary=\"\";\r\n    var reader = new FileReader();\r\n    reader.onload = (function(reader)\r\n    {\r\n        return async function()\r\n        {\r\n            var content = reader.result;\r\n            let task = \"Give a list of bullet points of the most important sentences\"\r\n           setSummary(await openAI_API(content,task))\r\n        }\r\n    })(reader);\r\n\r\n    reader.readAsText(file);\r\n}\r\n// At this point of time the application works only for .txt files \r\nconst FileUpload = ({ files, setFiles, removeFile ,doesExist,summary,setSummary,setNewText}) => {\r\n    const uploadHandler = async (event) => {\r\n        const file = event.target.files[0];\r\n        \r\n        if(doesExist(file.name)==false) return;\r\n        if(!file) return;\r\n        file.isUploading = true;\r\n        setNewText(\"Loading...\")\r\n        await readFile(file,setSummary)\r\n        setFiles([...files, file])\r\n        // Fill up form data to store the file and file name\r\n        const formData = new FormData();\r\n        formData.append(\r\n            \"newFile\",\r\n            file,\r\n            file.name\r\n        )\r\n        // POST request to upload file using axios\r\n        axios.post('http://localhost:8080/upload', formData)\r\n            .then((res) => {\r\n                file.isUploading = false;\r\n                setFiles([...files, file])\r\n            })\r\n            .catch((err) => {\r\n                console.error(err)\r\n                removeFile(file.name)\r\n            });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"file-card\">\r\n\r\n                <div className=\"file-inputs\">\r\n                    <input type=\"file\" onChange={uploadHandler} />\r\n                    <button>\r\n                        Upload\r\n                    </button>\r\n                </div>\r\n\r\n                <p className=\"main\">Upload .txt file</p>\r\n                <p className=\"info\">Get brief summary of the document</p>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FileUpload\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faFileAlt,faFilePdf, faSpinner, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport './FileItem.scss'\r\nfunction shorten(name)\r\n{\r\n    let max_size=35\r\n    if(name.length>max_size){\r\n        return name.substring(0,max_size)+\"...\";\r\n    }\r\n    return name        \r\n}\r\n\r\nconst FileItem = ({ file, deleteFile }) => {\r\n    return (\r\n        <>\r\n            <li\r\n                className=\"file-item\"\r\n                key={file.name}>\r\n                <FontAwesomeIcon icon={faFilePdf} />\r\n                <p>{shorten(file.name)}</p>\r\n                <div className=\"functionalities\">\r\n                    {/* When uploading is in progress file.isUploading=True */}\r\n                    <div className=\"side\"></div>\r\n                    {file.isUploading && <FontAwesomeIcon\r\n                        icon={faSpinner} className=\"fa-spin\"\r\n                        />\r\n                    }\r\n                    {/* When uploading is completed then show delete icon */}\r\n                    {!file.isUploading &&\r\n                        <FontAwesomeIcon icon={faTrash}\r\n                            onClick={() => deleteFile(file.name)} />\r\n                    }\r\n                </div>\r\n            </li>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FileItem\r\n","import axios from 'axios'\r\nimport React from 'react'\r\nimport FileItem from '../FileItem/FileItem'\r\n\r\nconst FileList = ({ files, removeFile }) => {\r\n    // \"files\" contain the list of files and \"removeFile\" is a callback function that helps to remove the file from UI after DELETE request is successfully executed.\r\n\r\n    // To delete a file using delete button.\r\n    const deleteFileHandler = (_name) => {\r\n        // Make a DELETE Request at /upload\r\n\r\n        axios.delete(`http://localhost:8080/upload?name=${_name}`)\r\n            .then((res) => removeFile(_name))\r\n            .catch((err) => console.error(err));\r\n    }\r\n\r\n    return (\r\n        <ul className=\"file-list\">\r\n            {\r\n                files &&\r\n                files.map(f => (<FileItem\r\n                    key={f.name}\r\n                    file={f}\r\n                    deleteFile={deleteFileHandler} />))\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default FileList\r\n","import React, { Component,useState } from \"react\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faFileAlt,faFilePdf, faSpinner, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport './TextResponse.scss'\r\n\r\nconst TextResponse = ({summary,setNewText,newText}) => {\r\n  const [text,setText]=useState(\"\")\r\n\r\n  if(text!=summary){\r\n    console.log(summary)\r\n  setText(summary)\r\n  setNewText(summary.split('\\n').map(str => <p>{str}</p>));\r\n  console.log(newText)\r\n  }\r\n    \r\n    return (\r\n      <Card>\r\n      <Card.Body>\r\n        {newText}\r\n      </Card.Body>\r\n    </Card>\r\n    )\r\n}\r\n\r\nexport default TextResponse\r\n","import { useState } from 'react'\r\nimport './App.scss'\r\nimport FileUpload from './FileUpload/FileUpload';\r\nimport FileList from './FileList/FileList';\r\nimport { Alert } from 'react-alert'\r\nimport TextResponse from './TextResponse/TextResponse';\r\n\r\nfunction App() {\r\n  // useState variable to store files\r\n  const [files, setFiles] = useState([])\r\n  const [summary,setSummary]=useState(\"\")\r\n  const [newText,setNewText]=useState(\"\")\r\n\r\n  // Function which removes file from UI\r\n  const removeFile = (filename) => {\r\n    setFiles(files.filter(file=>file.name!==filename))\r\n  }\r\n// Function which checks the same file already exists in the list of files already uploaded\r\n  const doesExist = (filename) => {\r\n    for(let i=0;i<files.length;i++)\r\n    {\r\n      if(files[i].name===filename){\r\n        alert(\"File already exists in the list\")\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  console.log(files)\r\n  return (\r\n    <div className=\"App flex-parent\">\r\n      <div className='fileupload flex-child'>\r\n    <FileUpload files={files} setFiles={setFiles}\r\n      removeFile={removeFile} doesExist={doesExist}  summary={summary} setSummary={setSummary} setNewText={setNewText}/>\r\n    <FileList files={files} removeFile={removeFile} />\r\n    </div>\r\n    <div className='right-comp flex-child'>\r\n    <p className='description'>Summary of the document</p>\r\n    <div className='text-response'>\r\n      <TextResponse summary={summary} newText={newText} setNewText={setNewText}/>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}